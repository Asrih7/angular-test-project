{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nconst _c0 = [\"autoScroll\"];\nfunction NgChatbotAngularComponent_div_3_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.chatConfig.title);\n  }\n}\nfunction NgChatbotAngularComponent_div_3_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.chatConfig.subTitle);\n  }\n}\nfunction NgChatbotAngularComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15);\n    i0.ɵɵelement(2, \"i\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgChatbotAngularComponent_div_3_p_3_Template, 2, 1, \"p\", 17);\n    i0.ɵɵtemplate(4, NgChatbotAngularComponent_div_3_p_4_Template, 2, 1, \"p\", 18);\n    i0.ɵɵelementStart(5, \"span\", 19);\n    i0.ɵɵlistener(\"click\", function NgChatbotAngularComponent_div_3_Template_span_click_5_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.closeDialog());\n    });\n    i0.ɵɵelement(6, \"i\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chatConfig.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chatConfig.subTitle);\n  }\n}\nfunction NgChatbotAngularComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const msg_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", msg_r9.type == \"user\" ? \"user-msg\" : \"bot-msg\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", msg_r9.message, \" \");\n  }\n}\nfunction NgChatbotAngularComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"div\", 25);\n    i0.ɵɵelement(2, \"span\")(3, \"span\")(4, \"span\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NgChatbotAngularComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵlistener(\"click\", function NgChatbotAngularComponent_div_13_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.showDialog());\n    });\n    i0.ɵɵelement(1, \"i\", 29);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NgChatbotAngularComponent_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵlistener(\"click\", function NgChatbotAngularComponent_div_13_div_2_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.closeDialog());\n    });\n    i0.ɵɵelement(1, \"i\", 30);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NgChatbotAngularComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, NgChatbotAngularComponent_div_13_div_1_Template, 2, 0, \"div\", 27);\n    i0.ɵɵtemplate(2, NgChatbotAngularComponent_div_13_div_2_Template, 2, 0, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.isModalActive);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.isModalActive);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"hidden-chat\": a0,\n    \"show-chat\": a1\n  };\n};\nclass NgChatbotAngularComponent {\n  constructor() {\n    this.onMessageInput = new EventEmitter();\n    this.messages = [];\n    this.userMessage = '';\n    this.isModalActive = false;\n    this.isBotActive = false;\n    this.isButtonVisible = true;\n  }\n  set serverResponse(value) {\n    this.addServerResponse(value);\n  }\n  ngOnInit() {\n    this.messages = [];\n  }\n  showDialog() {\n    this.isModalActive = true;\n    this.isButtonVisible = false;\n    let modal_t = document.getElementById('chat_modal');\n    modal_t?.classList.remove('hidden-chat');\n    modal_t?.classList.add('show-chat');\n  }\n  closeDialog() {\n    this.isModalActive = false;\n    this.isButtonVisible = true;\n    let modal_t = document.getElementById('chat_modal');\n    modal_t?.classList.remove('show-chat');\n    modal_t?.classList.add('hidden-chat');\n  }\n  pushData() {\n    if (this.userMessage.trim() !== '') {\n      this.onMessage(this.userMessage);\n      this.messages.push({\n        type: 'user',\n        message: this.userMessage\n      });\n      this.userMessage = '';\n      this.isBotActive = true;\n      this.scrollToBottom(); // Add this line to scroll to bottom after adding user message\n    }\n  }\n\n  addServerResponse(serverResponse) {\n    const newMessage = {\n      type: 'bot',\n      message: serverResponse,\n      loading: true\n    };\n    this.messages.push(newMessage);\n    this.isBotActive = false;\n    this.scrollToBottom(); // Add this line to scroll to bottom after adding server response\n    setTimeout(() => {\n      newMessage.loading = false;\n      this.scrollToBottom();\n    }, 1000);\n  }\n  scrollToBottom() {\n    try {\n      setTimeout(() => {\n        if (this.myScrollContainer) {\n          const scrollContainer = this.myScrollContainer.nativeElement;\n          scrollContainer.scrollTop = scrollContainer.scrollHeight;\n          scrollContainer.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n            inline: \"nearest\"\n          });\n        }\n      }, 100);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  onMessage(date) {\n    this.onMessageInput.emit(date.trim());\n  }\n  static #_ = this.ɵfac = function NgChatbotAngularComponent_Factory(t) {\n    return new (t || NgChatbotAngularComponent)();\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgChatbotAngularComponent,\n    selectors: [[\"ng-chatbot-angular\"]],\n    viewQuery: function NgChatbotAngularComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myScrollContainer = _t.first);\n      }\n    },\n    inputs: {\n      chatConfig: \"chatConfig\",\n      serverResponse: \"serverResponse\"\n    },\n    outputs: {\n      onMessageInput: \"onMessageInput\"\n    },\n    decls: 14,\n    vars: 9,\n    consts: [[1, \"noselect\", \"container\"], [\"id\", \"chat_modal\", 3, \"ngClass\"], [1, \"chat\"], [\"chatConfig\", \"\", \"class\", \"chat-header\", 4, \"ngIf\"], [1, \"messages-content\"], [\"autoScroll\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"chat-typing\", 4, \"ngIf\"], [1, \"clearfix\"], [1, \"message-box\"], [\"type\", \"text\", \"placeholder\", \"Type message...\", 1, \"message-input\", 3, \"ngModel\", \"keydown.enter\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"noselect\", \"message-submit\", 3, \"click\"], [1, \"fa\", \"fa-paper-plane\"], [\"class\", \"float-buton-group noselect\", 4, \"ngIf\"], [\"chatConfig\", \"\", 1, \"chat-header\"], [1, \"chat-icon\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-user-circle-o\"], [\"class\", \"title\", 4, \"ngIf\"], [\"class\", \"sub-title\", 4, \"ngIf\"], [1, \"close-chat\", 3, \"click\"], [1, \"fa\", \"fa-times\"], [1, \"title\"], [1, \"sub-title\"], [3, \"ngClass\"], [1, \"chat-typing\"], [1, \"chat-typing--bubbles\"], [1, \"float-buton-group\", \"noselect\"], [\"class\", \"float-button\", 3, \"click\", 4, \"ngIf\"], [1, \"float-button\", 3, \"click\"], [1, \"float-icon\", \"fa\", \"fa-comment\"], [1, \"float-icon\", \"fa\", \"fa-times-circle\"]],\n    template: function NgChatbotAngularComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtemplate(3, NgChatbotAngularComponent_div_3_Template, 7, 2, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4, 5);\n        i0.ɵɵtemplate(6, NgChatbotAngularComponent_div_6_Template, 3, 2, \"div\", 6);\n        i0.ɵɵtemplate(7, NgChatbotAngularComponent_div_7_Template, 5, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"div\", 8);\n        i0.ɵɵelementStart(9, \"div\", 9)(10, \"input\", 10);\n        i0.ɵɵlistener(\"keydown.enter\", function NgChatbotAngularComponent_Template_input_keydown_enter_10_listener() {\n          return ctx.pushData();\n        })(\"ngModelChange\", function NgChatbotAngularComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.userMessage = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 11);\n        i0.ɵɵlistener(\"click\", function NgChatbotAngularComponent_Template_div_click_11_listener() {\n          return ctx.pushData();\n        });\n        i0.ɵɵelement(12, \"i\", 12);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(13, NgChatbotAngularComponent_div_13_Template, 3, 2, \"div\", 13);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c1, !ctx.isModalActive, ctx.isModalActive));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.chatConfig && (ctx.chatConfig.title || ctx.chatConfig.subTitle));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isBotActive);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.userMessage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isButtonVisible);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\".show-chat[_ngcontent-%COMP%]{display:block}.hidden-chat[_ngcontent-%COMP%]{display:none}.container[_ngcontent-%COMP%]{display:flex;flex-direction:column;position:absolute;right:0;bottom:0;margin:30px}.float-icon[_ngcontent-%COMP%]{margin-top:17px}.float-button[_ngcontent-%COMP%]{height:50px;width:50px;float:right;border-radius:50%;text-align:center;background-color:#1e90ff;color:#fff;box-shadow:2px 2px 3px #999;cursor:pointer}.float-buton-group[_ngcontent-%COMP%]{margin-top:5px}.chat[_ngcontent-%COMP%]{width:400px;height:80vh;max-height:500px;z-index:2;overflow:hidden;box-shadow:0 5px 30px #0003;border-radius:20px;display:flex;flex-direction:column}.chat-header[_ngcontent-%COMP%]{flex:0 1 25px;position:relative;z-index:2;background:#1e90ff;color:#fff;text-transform:uppercase;text-align:left;padding:10px 0 9px 15px}.chat-header[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%], .chat-header[_ngcontent-%COMP%]   .sub-title[_ngcontent-%COMP%]{font-weight:500;font-size:14px;margin:0;padding:0;font-family:sans-serif}.chat-header[_ngcontent-%COMP%]   .sub-title[_ngcontent-%COMP%]{color:#fff;font-size:10px;letter-spacing:1px;margin-top:5px}.chat-icon[_ngcontent-%COMP%]{position:absolute;left:15px}.chat-icon[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-top:3px;font-size:20px;color:#fff}.message-box[_ngcontent-%COMP%]{flex:0 1 25px;padding:10px;position:relative}.message-box[_ngcontent-%COMP%]   .message-input[_ngcontent-%COMP%]{background:none;border:none;outline:none!important;resize:none;color:#000;font-size:14px;height:17px;margin:0;padding-right:20px;width:300px}.message-box[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]:focus:-webkit-placeholder{color:transparent}.message-box[_ngcontent-%COMP%]   .message-submit[_ngcontent-%COMP%]{position:absolute;z-index:1;top:9px;right:10px;color:#fff;border:none;background:#1e90ff;font-size:10px;text-transform:uppercase;line-height:1;padding:6px 10px;border-radius:10px;cursor:pointer}.message-box[_ngcontent-%COMP%]   .message-submit[_ngcontent-%COMP%]:hover{background:#1e90ff}.close-chat[_ngcontent-%COMP%]{position:absolute;top:15px;right:15px;color:#fff;cursor:pointer}.user-msg[_ngcontent-%COMP%]{float:right;margin-top:10px;margin-right:10px;background-color:#1e90ff;color:#fff;padding:8px 12px;border-radius:15px;font-family:sans-serif;font-size:15px;max-width:380px;overflow-wrap:break-word}.bot-msg[_ngcontent-%COMP%]{max-width:380px;float:left;margin-top:10px;margin-left:10px;background-color:#1e90ff;color:#fff;padding:8px 12px;border-radius:15px;font-family:sans-serif;font-size:15px;overflow-wrap:break-word}.messages-content[_ngcontent-%COMP%]{margin-bottom:20px}.clearfix[_ngcontent-%COMP%]{clear:both}.chat-typing[_ngcontent-%COMP%]{margin:10px 0 0 10px;float:left;padding-bottom:10px}.chat-typing--bubbles[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:inline-block;background-color:#b6b5ba;width:10px;height:10px;border-radius:100%;margin-right:5px;animation:_ngcontent-%COMP%_bob 2s infinite}.chat-typing--bubbles[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(1){animation-delay:-1s}.chat-typing--bubbles[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(2){animation-delay:-.85s}.chat-typing--bubbles[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(3){animation-delay:-.7s;margin-right:0}@keyframes _ngcontent-%COMP%_bob{10%{transform:translateY(-10px);background-color:#9e9da2}50%{transform:translateY(0);background-color:#b6b5ba}}[_ngcontent-%COMP%]::-webkit-scrollbar{width:5px}[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#888;border-radius:5px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#504e4e;border-radius:5px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:#555;border-radius:5px}.noselect[_ngcontent-%COMP%]{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgChatbotAngularComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-chatbot-angular',\n      template: \"<section class=\\\"noselect container\\\">\\r\\n  <div id=\\\"chat_modal\\\" [ngClass]=\\\"{'hidden-chat': !isModalActive, 'show-chat': isModalActive}\\\" >\\r\\n    <div class=\\\"chat\\\">\\r\\n      <div chatConfig class=\\\"chat-header\\\" *ngIf=\\\"chatConfig && (chatConfig.title || chatConfig.subTitle)\\\">\\r\\n        <div class=\\\"chat-icon\\\">\\r\\n          <i class=\\\"fa fa-user-circle-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </div>\\r\\n        <p class=\\\"title\\\" *ngIf=\\\"chatConfig.title\\\">{{ chatConfig.title }}</p>\\r\\n        <p class=\\\"sub-title\\\" *ngIf=\\\"chatConfig.subTitle\\\">{{ chatConfig.subTitle }}</p>\\r\\n        <span (click)=\\\"closeDialog()\\\" class=\\\"close-chat\\\" >\\r\\n          <i class=\\\"fa fa-times\\\"></i>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div #autoScroll class=\\\"messages-content\\\">\\r\\n        <div *ngFor=\\\"let msg of messages\\\">\\r\\n          <label [ngClass]=\\\"msg.type == 'user' ? 'user-msg' : 'bot-msg'\\\" >\\r\\n            {{ msg.message }}\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"chat-typing\\\" *ngIf=\\\"isBotActive\\\">\\r\\n          <div class=\\\"chat-typing--bubbles\\\">\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n      <div class=\\\"message-box\\\">\\r\\n        <input type=\\\"text\\\" (keydown.enter)=\\\"pushData()\\\" [(ngModel)]=\\\"userMessage\\\" class=\\\"message-input\\\" placeholder=\\\"Type message...\\\" />\\r\\n        <div type=\\\"submit\\\" class=\\\"noselect message-submit\\\" (click)=\\\"pushData()\\\">\\r\\n          <i class=\\\"fa fa-paper-plane\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"float-buton-group noselect\\\" *ngIf=\\\"isButtonVisible\\\">\\r\\n    <div class=\\\"float-button\\\" *ngIf=\\\"!isModalActive\\\" (click)=\\\"showDialog()\\\">\\r\\n      <i class=\\\"float-icon fa fa-comment\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"float-button\\\" *ngIf=\\\"isModalActive\\\" (click)=\\\"closeDialog()\\\">\\r\\n      <i class=\\\"float-icon fa fa-times-circle\\\"></i>\\r\\n    </div>\\r\\n  </div>  \\r\\n</section>\\r\\n\",\n      styles: [\".show-chat{display:block}.hidden-chat{display:none}.container{display:flex;flex-direction:column;position:absolute;right:0;bottom:0;margin:30px}.float-icon{margin-top:17px}.float-button{height:50px;width:50px;float:right;border-radius:50%;text-align:center;background-color:#1e90ff;color:#fff;box-shadow:2px 2px 3px #999;cursor:pointer}.float-buton-group{margin-top:5px}.chat{width:400px;height:80vh;max-height:500px;z-index:2;overflow:hidden;box-shadow:0 5px 30px #0003;border-radius:20px;display:flex;flex-direction:column}.chat-header{flex:0 1 25px;position:relative;z-index:2;background:#1e90ff;color:#fff;text-transform:uppercase;text-align:left;padding:10px 0 9px 15px}.chat-header .title,.chat-header .sub-title{font-weight:500;font-size:14px;margin:0;padding:0;font-family:sans-serif}.chat-header .sub-title{color:#fff;font-size:10px;letter-spacing:1px;margin-top:5px}.chat-icon{position:absolute;left:15px}.chat-icon i{margin-top:3px;font-size:20px;color:#fff}.message-box{flex:0 1 25px;padding:10px;position:relative}.message-box .message-input{background:none;border:none;outline:none!important;resize:none;color:#000;font-size:14px;height:17px;margin:0;padding-right:20px;width:300px}.message-box textarea:focus:-webkit-placeholder{color:transparent}.message-box .message-submit{position:absolute;z-index:1;top:9px;right:10px;color:#fff;border:none;background:#1e90ff;font-size:10px;text-transform:uppercase;line-height:1;padding:6px 10px;border-radius:10px;cursor:pointer}.message-box .message-submit:hover{background:#1e90ff}.close-chat{position:absolute;top:15px;right:15px;color:#fff;cursor:pointer}.user-msg{float:right;margin-top:10px;margin-right:10px;background-color:#1e90ff;color:#fff;padding:8px 12px;border-radius:15px;font-family:sans-serif;font-size:15px;max-width:380px;overflow-wrap:break-word}.bot-msg{max-width:380px;float:left;margin-top:10px;margin-left:10px;background-color:#1e90ff;color:#fff;padding:8px 12px;border-radius:15px;font-family:sans-serif;font-size:15px;overflow-wrap:break-word}.messages-content{margin-bottom:20px}.clearfix{clear:both}.chat-typing{margin:10px 0 0 10px;float:left;padding-bottom:10px}.chat-typing--bubbles span{display:inline-block;background-color:#b6b5ba;width:10px;height:10px;border-radius:100%;margin-right:5px;animation:bob 2s infinite}.chat-typing--bubbles span:nth-child(1){animation-delay:-1s}.chat-typing--bubbles span:nth-child(2){animation-delay:-.85s}.chat-typing--bubbles span:nth-child(3){animation-delay:-.7s;margin-right:0}@keyframes bob{10%{transform:translateY(-10px);background-color:#9e9da2}50%{transform:translateY(0);background-color:#b6b5ba}}::-webkit-scrollbar{width:5px}::-webkit-scrollbar-track{background:#888;border-radius:5px}::-webkit-scrollbar-thumb{background:#504e4e;border-radius:5px}::-webkit-scrollbar-thumb:hover{background:#555;border-radius:5px}.noselect{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}\\n\"]\n    }]\n  }], null, {\n    myScrollContainer: [{\n      type: ViewChild,\n      args: ['autoScroll', {\n        static: true\n      }]\n    }],\n    chatConfig: [{\n      type: Input\n    }],\n    serverResponse: [{\n      type: Input\n    }],\n    onMessageInput: [{\n      type: Output\n    }]\n  });\n})();\nclass NgChatbotAngularModule {\n  static #_ = this.ɵfac = function NgChatbotAngularModule_Factory(t) {\n    return new (t || NgChatbotAngularModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgChatbotAngularModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, BrowserModule, FormsModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgChatbotAngularModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgChatbotAngularComponent],\n      imports: [CommonModule, BrowserModule, FormsModule],\n      exports: [NgChatbotAngularComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-chatbot-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgChatbotAngularComponent, NgChatbotAngularModule };","map":{"version":3,"names":["i0","EventEmitter","Component","ViewChild","Input","Output","NgModule","i1","CommonModule","i2","FormsModule","BrowserModule","_c0","NgChatbotAngularComponent_div_3_p_3_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r5","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","chatConfig","title","NgChatbotAngularComponent_div_3_p_4_Template","ctx_r6","subTitle","NgChatbotAngularComponent_div_3_Template","_r8","ɵɵgetCurrentView","ɵɵelement","ɵɵtemplate","ɵɵlistener","NgChatbotAngularComponent_div_3_Template_span_click_5_listener","ɵɵrestoreView","ctx_r7","ɵɵresetView","closeDialog","ctx_r0","ɵɵproperty","NgChatbotAngularComponent_div_6_Template","msg_r9","$implicit","type","ɵɵtextInterpolate1","message","NgChatbotAngularComponent_div_7_Template","NgChatbotAngularComponent_div_13_div_1_Template","_r13","NgChatbotAngularComponent_div_13_div_1_Template_div_click_0_listener","ctx_r12","showDialog","NgChatbotAngularComponent_div_13_div_2_Template","_r15","NgChatbotAngularComponent_div_13_div_2_Template_div_click_0_listener","ctx_r14","NgChatbotAngularComponent_div_13_Template","ctx_r4","isModalActive","_c1","a0","a1","NgChatbotAngularComponent","constructor","onMessageInput","messages","userMessage","isBotActive","isButtonVisible","serverResponse","value","addServerResponse","ngOnInit","modal_t","document","getElementById","classList","remove","add","pushData","trim","onMessage","push","scrollToBottom","newMessage","loading","setTimeout","myScrollContainer","scrollContainer","nativeElement","scrollTop","scrollHeight","scrollIntoView","behavior","block","inline","err","console","error","date","emit","_","ɵfac","NgChatbotAngularComponent_Factory","t","_2","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","NgChatbotAngularComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","inputs","outputs","decls","vars","consts","template","NgChatbotAngularComponent_Template","NgChatbotAngularComponent_Template_input_keydown_enter_10_listener","NgChatbotAngularComponent_Template_input_ngModelChange_10_listener","$event","NgChatbotAngularComponent_Template_div_click_11_listener","ɵɵpureFunction2","dependencies","NgClass","NgForOf","NgIf","DefaultValueAccessor","NgControlStatus","NgModel","styles","ngDevMode","ɵsetClassMetadata","args","selector","static","NgChatbotAngularModule","NgChatbotAngularModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["D:/Project 2024/angular-test-project/node_modules/ng-chatbot-angular/fesm2022/ng-chatbot-angular.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nclass NgChatbotAngularComponent {\n    constructor() {\n        this.onMessageInput = new EventEmitter();\n        this.messages = [];\n        this.userMessage = '';\n        this.isModalActive = false;\n        this.isBotActive = false;\n        this.isButtonVisible = true;\n    }\n    set serverResponse(value) {\n        this.addServerResponse(value);\n    }\n    ngOnInit() {\n        this.messages = [];\n    }\n    showDialog() {\n        this.isModalActive = true;\n        this.isButtonVisible = false;\n        let modal_t = document.getElementById('chat_modal');\n        modal_t?.classList.remove('hidden-chat');\n        modal_t?.classList.add('show-chat');\n    }\n    closeDialog() {\n        this.isModalActive = false;\n        this.isButtonVisible = true;\n        let modal_t = document.getElementById('chat_modal');\n        modal_t?.classList.remove('show-chat');\n        modal_t?.classList.add('hidden-chat');\n    }\n    pushData() {\n        if (this.userMessage.trim() !== '') {\n            this.onMessage(this.userMessage);\n            this.messages.push({ type: 'user', message: this.userMessage });\n            this.userMessage = '';\n            this.isBotActive = true;\n            this.scrollToBottom(); // Add this line to scroll to bottom after adding user message\n        }\n    }\n    addServerResponse(serverResponse) {\n        const newMessage = { type: 'bot', message: serverResponse, loading: true };\n        this.messages.push(newMessage);\n        this.isBotActive = false;\n        this.scrollToBottom(); // Add this line to scroll to bottom after adding server response\n        setTimeout(() => {\n            newMessage.loading = false;\n            this.scrollToBottom();\n        }, 1000);\n    }\n    scrollToBottom() {\n        try {\n            setTimeout(() => {\n                if (this.myScrollContainer) {\n                    const scrollContainer = this.myScrollContainer.nativeElement;\n                    scrollContainer.scrollTop = scrollContainer.scrollHeight;\n                    scrollContainer.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n                }\n            }, 100);\n        }\n        catch (err) {\n            console.error(err);\n        }\n    }\n    onMessage(date) {\n        this.onMessageInput.emit(date.trim());\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: NgChatbotAngularComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: NgChatbotAngularComponent, selector: \"ng-chatbot-angular\", inputs: { chatConfig: \"chatConfig\", serverResponse: \"serverResponse\" }, outputs: { onMessageInput: \"onMessageInput\" }, viewQueries: [{ propertyName: \"myScrollContainer\", first: true, predicate: [\"autoScroll\"], descendants: true, static: true }], ngImport: i0, template: \"<section class=\\\"noselect container\\\">\\r\\n  <div id=\\\"chat_modal\\\" [ngClass]=\\\"{'hidden-chat': !isModalActive, 'show-chat': isModalActive}\\\" >\\r\\n    <div class=\\\"chat\\\">\\r\\n      <div chatConfig class=\\\"chat-header\\\" *ngIf=\\\"chatConfig && (chatConfig.title || chatConfig.subTitle)\\\">\\r\\n        <div class=\\\"chat-icon\\\">\\r\\n          <i class=\\\"fa fa-user-circle-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </div>\\r\\n        <p class=\\\"title\\\" *ngIf=\\\"chatConfig.title\\\">{{ chatConfig.title }}</p>\\r\\n        <p class=\\\"sub-title\\\" *ngIf=\\\"chatConfig.subTitle\\\">{{ chatConfig.subTitle }}</p>\\r\\n        <span (click)=\\\"closeDialog()\\\" class=\\\"close-chat\\\" >\\r\\n          <i class=\\\"fa fa-times\\\"></i>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div #autoScroll class=\\\"messages-content\\\">\\r\\n        <div *ngFor=\\\"let msg of messages\\\">\\r\\n          <label [ngClass]=\\\"msg.type == 'user' ? 'user-msg' : 'bot-msg'\\\" >\\r\\n            {{ msg.message }}\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"chat-typing\\\" *ngIf=\\\"isBotActive\\\">\\r\\n          <div class=\\\"chat-typing--bubbles\\\">\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n      <div class=\\\"message-box\\\">\\r\\n        <input type=\\\"text\\\" (keydown.enter)=\\\"pushData()\\\" [(ngModel)]=\\\"userMessage\\\" class=\\\"message-input\\\" placeholder=\\\"Type message...\\\" />\\r\\n        <div type=\\\"submit\\\" class=\\\"noselect message-submit\\\" (click)=\\\"pushData()\\\">\\r\\n          <i class=\\\"fa fa-paper-plane\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"float-buton-group noselect\\\" *ngIf=\\\"isButtonVisible\\\">\\r\\n    <div class=\\\"float-button\\\" *ngIf=\\\"!isModalActive\\\" (click)=\\\"showDialog()\\\">\\r\\n      <i class=\\\"float-icon fa fa-comment\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"float-button\\\" *ngIf=\\\"isModalActive\\\" (click)=\\\"closeDialog()\\\">\\r\\n      <i class=\\\"float-icon fa fa-times-circle\\\"></i>\\r\\n    </div>\\r\\n  </div>  \\r\\n</section>\\r\\n\", styles: [\".show-chat{display:block}.hidden-chat{display:none}.container{display:flex;flex-direction:column;position:absolute;right:0;bottom:0;margin:30px}.float-icon{margin-top:17px}.float-button{height:50px;width:50px;float:right;border-radius:50%;text-align:center;background-color:#1e90ff;color:#fff;box-shadow:2px 2px 3px #999;cursor:pointer}.float-buton-group{margin-top:5px}.chat{width:400px;height:80vh;max-height:500px;z-index:2;overflow:hidden;box-shadow:0 5px 30px #0003;border-radius:20px;display:flex;flex-direction:column}.chat-header{flex:0 1 25px;position:relative;z-index:2;background:#1e90ff;color:#fff;text-transform:uppercase;text-align:left;padding:10px 0 9px 15px}.chat-header .title,.chat-header .sub-title{font-weight:500;font-size:14px;margin:0;padding:0;font-family:sans-serif}.chat-header .sub-title{color:#fff;font-size:10px;letter-spacing:1px;margin-top:5px}.chat-icon{position:absolute;left:15px}.chat-icon i{margin-top:3px;font-size:20px;color:#fff}.message-box{flex:0 1 25px;padding:10px;position:relative}.message-box .message-input{background:none;border:none;outline:none!important;resize:none;color:#000;font-size:14px;height:17px;margin:0;padding-right:20px;width:300px}.message-box textarea:focus:-webkit-placeholder{color:transparent}.message-box .message-submit{position:absolute;z-index:1;top:9px;right:10px;color:#fff;border:none;background:#1e90ff;font-size:10px;text-transform:uppercase;line-height:1;padding:6px 10px;border-radius:10px;cursor:pointer}.message-box .message-submit:hover{background:#1e90ff}.close-chat{position:absolute;top:15px;right:15px;color:#fff;cursor:pointer}.user-msg{float:right;margin-top:10px;margin-right:10px;background-color:#1e90ff;color:#fff;padding:8px 12px;border-radius:15px;font-family:sans-serif;font-size:15px;max-width:380px;overflow-wrap:break-word}.bot-msg{max-width:380px;float:left;margin-top:10px;margin-left:10px;background-color:#1e90ff;color:#fff;padding:8px 12px;border-radius:15px;font-family:sans-serif;font-size:15px;overflow-wrap:break-word}.messages-content{margin-bottom:20px}.clearfix{clear:both}.chat-typing{margin:10px 0 0 10px;float:left;padding-bottom:10px}.chat-typing--bubbles span{display:inline-block;background-color:#b6b5ba;width:10px;height:10px;border-radius:100%;margin-right:5px;animation:bob 2s infinite}.chat-typing--bubbles span:nth-child(1){animation-delay:-1s}.chat-typing--bubbles span:nth-child(2){animation-delay:-.85s}.chat-typing--bubbles span:nth-child(3){animation-delay:-.7s;margin-right:0}@keyframes bob{10%{transform:translateY(-10px);background-color:#9e9da2}50%{transform:translateY(0);background-color:#b6b5ba}}::-webkit-scrollbar{width:5px}::-webkit-scrollbar-track{background:#888;border-radius:5px}::-webkit-scrollbar-thumb{background:#504e4e;border-radius:5px}::-webkit-scrollbar-thumb:hover{background:#555;border-radius:5px}.noselect{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: NgChatbotAngularComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng-chatbot-angular', template: \"<section class=\\\"noselect container\\\">\\r\\n  <div id=\\\"chat_modal\\\" [ngClass]=\\\"{'hidden-chat': !isModalActive, 'show-chat': isModalActive}\\\" >\\r\\n    <div class=\\\"chat\\\">\\r\\n      <div chatConfig class=\\\"chat-header\\\" *ngIf=\\\"chatConfig && (chatConfig.title || chatConfig.subTitle)\\\">\\r\\n        <div class=\\\"chat-icon\\\">\\r\\n          <i class=\\\"fa fa-user-circle-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </div>\\r\\n        <p class=\\\"title\\\" *ngIf=\\\"chatConfig.title\\\">{{ chatConfig.title }}</p>\\r\\n        <p class=\\\"sub-title\\\" *ngIf=\\\"chatConfig.subTitle\\\">{{ chatConfig.subTitle }}</p>\\r\\n        <span (click)=\\\"closeDialog()\\\" class=\\\"close-chat\\\" >\\r\\n          <i class=\\\"fa fa-times\\\"></i>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div #autoScroll class=\\\"messages-content\\\">\\r\\n        <div *ngFor=\\\"let msg of messages\\\">\\r\\n          <label [ngClass]=\\\"msg.type == 'user' ? 'user-msg' : 'bot-msg'\\\" >\\r\\n            {{ msg.message }}\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"chat-typing\\\" *ngIf=\\\"isBotActive\\\">\\r\\n          <div class=\\\"chat-typing--bubbles\\\">\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n      <div class=\\\"message-box\\\">\\r\\n        <input type=\\\"text\\\" (keydown.enter)=\\\"pushData()\\\" [(ngModel)]=\\\"userMessage\\\" class=\\\"message-input\\\" placeholder=\\\"Type message...\\\" />\\r\\n        <div type=\\\"submit\\\" class=\\\"noselect message-submit\\\" (click)=\\\"pushData()\\\">\\r\\n          <i class=\\\"fa fa-paper-plane\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"float-buton-group noselect\\\" *ngIf=\\\"isButtonVisible\\\">\\r\\n    <div class=\\\"float-button\\\" *ngIf=\\\"!isModalActive\\\" (click)=\\\"showDialog()\\\">\\r\\n      <i class=\\\"float-icon fa fa-comment\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"float-button\\\" *ngIf=\\\"isModalActive\\\" (click)=\\\"closeDialog()\\\">\\r\\n      <i class=\\\"float-icon fa fa-times-circle\\\"></i>\\r\\n    </div>\\r\\n  </div>  \\r\\n</section>\\r\\n\", styles: [\".show-chat{display:block}.hidden-chat{display:none}.container{display:flex;flex-direction:column;position:absolute;right:0;bottom:0;margin:30px}.float-icon{margin-top:17px}.float-button{height:50px;width:50px;float:right;border-radius:50%;text-align:center;background-color:#1e90ff;color:#fff;box-shadow:2px 2px 3px #999;cursor:pointer}.float-buton-group{margin-top:5px}.chat{width:400px;height:80vh;max-height:500px;z-index:2;overflow:hidden;box-shadow:0 5px 30px #0003;border-radius:20px;display:flex;flex-direction:column}.chat-header{flex:0 1 25px;position:relative;z-index:2;background:#1e90ff;color:#fff;text-transform:uppercase;text-align:left;padding:10px 0 9px 15px}.chat-header .title,.chat-header .sub-title{font-weight:500;font-size:14px;margin:0;padding:0;font-family:sans-serif}.chat-header .sub-title{color:#fff;font-size:10px;letter-spacing:1px;margin-top:5px}.chat-icon{position:absolute;left:15px}.chat-icon i{margin-top:3px;font-size:20px;color:#fff}.message-box{flex:0 1 25px;padding:10px;position:relative}.message-box .message-input{background:none;border:none;outline:none!important;resize:none;color:#000;font-size:14px;height:17px;margin:0;padding-right:20px;width:300px}.message-box textarea:focus:-webkit-placeholder{color:transparent}.message-box .message-submit{position:absolute;z-index:1;top:9px;right:10px;color:#fff;border:none;background:#1e90ff;font-size:10px;text-transform:uppercase;line-height:1;padding:6px 10px;border-radius:10px;cursor:pointer}.message-box .message-submit:hover{background:#1e90ff}.close-chat{position:absolute;top:15px;right:15px;color:#fff;cursor:pointer}.user-msg{float:right;margin-top:10px;margin-right:10px;background-color:#1e90ff;color:#fff;padding:8px 12px;border-radius:15px;font-family:sans-serif;font-size:15px;max-width:380px;overflow-wrap:break-word}.bot-msg{max-width:380px;float:left;margin-top:10px;margin-left:10px;background-color:#1e90ff;color:#fff;padding:8px 12px;border-radius:15px;font-family:sans-serif;font-size:15px;overflow-wrap:break-word}.messages-content{margin-bottom:20px}.clearfix{clear:both}.chat-typing{margin:10px 0 0 10px;float:left;padding-bottom:10px}.chat-typing--bubbles span{display:inline-block;background-color:#b6b5ba;width:10px;height:10px;border-radius:100%;margin-right:5px;animation:bob 2s infinite}.chat-typing--bubbles span:nth-child(1){animation-delay:-1s}.chat-typing--bubbles span:nth-child(2){animation-delay:-.85s}.chat-typing--bubbles span:nth-child(3){animation-delay:-.7s;margin-right:0}@keyframes bob{10%{transform:translateY(-10px);background-color:#9e9da2}50%{transform:translateY(0);background-color:#b6b5ba}}::-webkit-scrollbar{width:5px}::-webkit-scrollbar-track{background:#888;border-radius:5px}::-webkit-scrollbar-thumb{background:#504e4e;border-radius:5px}::-webkit-scrollbar-thumb:hover{background:#555;border-radius:5px}.noselect{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}\\n\"] }]\n        }], propDecorators: { myScrollContainer: [{\n                type: ViewChild,\n                args: ['autoScroll', { static: true }]\n            }], chatConfig: [{\n                type: Input\n            }], serverResponse: [{\n                type: Input\n            }], onMessageInput: [{\n                type: Output\n            }] } });\n\nclass NgChatbotAngularModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: NgChatbotAngularModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: NgChatbotAngularModule, declarations: [NgChatbotAngularComponent], imports: [CommonModule,\n            BrowserModule,\n            FormsModule], exports: [NgChatbotAngularComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: NgChatbotAngularModule, imports: [CommonModule,\n            BrowserModule,\n            FormsModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: NgChatbotAngularModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgChatbotAngularComponent],\n                    imports: [\n                        CommonModule,\n                        BrowserModule,\n                        FormsModule\n                    ],\n                    exports: [NgChatbotAngularComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of ng-chatbot-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgChatbotAngularComponent, NgChatbotAngularModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}